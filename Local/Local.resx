<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AutoclickerControl" xml:space="preserve">
    <value>F2 - start/stop auto-click</value>
  </data>
  <data name="AutoclickerH" xml:space="preserve">
    <value>Control:</value>
  </data>
  <data name="AutoclickerTime" xml:space="preserve">
    <value>Auto-click time in milliseconds:</value>
  </data>
  <data name="AutoclickerWarning" xml:space="preserve">
    <value>Attention! It is not recommended to bet less than 5!</value>
  </data>
  <data name="ButtonAbout" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="ButtonAutoclickerToolTip" xml:space="preserve">
    <value>Enable effective autoclicker</value>
  </data>
  <data name="ButtonBackToolTip" xml:space="preserve">
    <value>Return to previous page</value>
  </data>
  <data name="ButtonCloseToolTip" xml:space="preserve">
    <value>Close program</value>
  </data>
  <data name="ButtonConverter" xml:space="preserve">
    <value>Converter</value>
  </data>
  <data name="ButtonConverterToolTip" xml:space="preserve">
    <value>Convert Values</value>
  </data>
  <data name="ButtonDataParserToolTip" xml:space="preserve">
    <value>Activate data parser</value>
  </data>
  <data name="ButtonGlobal" xml:space="preserve">
    <value>Global</value>
  </data>
  <data name="ButtonGlobalToolTip" xml:space="preserve">
    <value>Go to Main page</value>
  </data>
  <data name="ButtonMinimToolTip" xml:space="preserve">
    <value>Hide program</value>
  </data>
  <data name="ButtonRoulette" xml:space="preserve">
    <value>Roulette</value>
  </data>
  <data name="ButtonRouletteToolTip" xml:space="preserve">
    <value>Play roulette</value>
  </data>
  <data name="ConverterArea" xml:space="preserve">
    <value>Area</value>
  </data>
  <data name="ConverterBinary" xml:space="preserve">
    <value>Binary</value>
  </data>
  <data name="ConverterCurrency" xml:space="preserve">
    <value>Currency</value>
  </data>
  <data name="ConverterData" xml:space="preserve">
    <value>Data</value>
  </data>
  <data name="ConverterDecimal" xml:space="preserve">
    <value>Decimal</value>
  </data>
  <data name="ConverterLength" xml:space="preserve">
    <value>Length</value>
  </data>
  <data name="ConverterMass" xml:space="preserve">
    <value>Mass</value>
  </data>
  <data name="ConverterPressure" xml:space="preserve">
    <value>Pressure</value>
  </data>
  <data name="ConverterRuble" xml:space="preserve">
    <value>Ruble</value>
  </data>
  <data name="ConverterSource" xml:space="preserve">
    <value>https://www.cbr-xml-daily.ru/daily_eng_utf8.xml</value>
  </data>
  <data name="ConverterTemperature" xml:space="preserve">
    <value>Temperature</value>
  </data>
  <data name="InfoAuthor" xml:space="preserve">
    <value>Author: Dmitry Zhutkov</value>
  </data>
  <data name="InfoAuthor2" xml:space="preserve">
    <value>Author: Dmitry Mirzoyan</value>
  </data>
  <data name="InfoButtonAcknowledgments" xml:space="preserve">
    <value>Acknowledgments</value>
  </data>
  <data name="InfoButtonAcknowledgmentsToolTip" xml:space="preserve">
    <value>View list of thanks</value>
  </data>
  <data name="InfoButtonToSupport" xml:space="preserve">
    <value>To support</value>
  </data>
  <data name="InfoDataVersion" xml:space="preserve">
    <value>Version September 17, 2019</value>
  </data>
  <data name="InfoDescription" xml:space="preserve">
    <value>The program was created to facilitate tasks and for fun.</value>
  </data>
  <data name="InfoDownloadCompleted" xml:space="preserve">
    <value>Download complete, starting ...</value>
  </data>
  <data name="InfoDownloadingUpdate" xml:space="preserve">
    <value>Download...</value>
  </data>
  <data name="InfoErrorDownload" xml:space="preserve">
    <value>Failed to download update.</value>
  </data>
  <data name="InfoGitHubToolTip" xml:space="preserve">
    <value>Go to program repositories</value>
  </data>
  <data name="InfoLatestUpdate" xml:space="preserve">
    <value>The latest version of the program is installed.</value>
  </data>
  <data name="InfoNewUpdate" xml:space="preserve">
    <value>Update Available v</value>
  </data>
  <data name="InfoReferences" xml:space="preserve">
    <value>References:</value>
  </data>
  <data name="InfoToSupportToolTip" xml:space="preserve">
    <value>Help the author in the further development of the program by depositing a certain amount</value>
  </data>
  <data name="InfoVKToolTip" xml:space="preserve">
    <value>Go to the VK program group</value>
  </data>
  <data name="InfoWait" xml:space="preserve">
    <value>Wait...</value>
  </data>
  <data name="LabelContent1" xml:space="preserve">
    <value>To use the application, click on the buttons below</value>
  </data>
  <data name="License" xml:space="preserve">
    <value>Before you start using the program, you should know these things:
1. The program will ALWAYS be launched only with administrator rights, this is to download the update without any complaints on the system drive, also with the auto-update program, to edit: the registry, where, in fact, is the directory of the installed program; remove the old version of the program and install a new one on the system drive, while nothing will happen to the system itself;
2. The program - NOT VIRUS! This is just a false antivirus operation, in fact, everything is safe;
3. As for the application on Android: updates will be less likely to come out, every 3 large versions on a PC;
4. When using the Autoclicker, you are not recommended to set the value below 10, this will lead to sudden consequences if you are reckless (opening windows, tabs, buttons, etc.) or the program / game hangs, you just need to suspend the Autoclicker temporarily while the program / the game will not function normally further;
5. If a bug is found, you need to report it to the Jekyll VK group, it is advisable to provide a log file for a quick fix of this bug, if possible;
6. An open source program posted on GitHub in the public domain. If you, having looked at the program code, want to make a comment, also write to the VK group’s LAN;
7. If you want to propose an idea for the program, also write to the VK group’s PM with details of their implementation;
8. Updates come out when it is ready, you do not want to face an unpleasant bug, right?
After reading the drug, you confirm it. Do not worry, there will no longer appear after this agreement this pop-up window. But after the update, you most likely need to take the medicine again. In order to use the program, you need to click</value>
  </data>
  <data name="LicenseAccept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="LicenseChance1" xml:space="preserve">
    <value>middle mouse button on the program close button.</value>
  </data>
  <data name="LicenseChance2" xml:space="preserve">
    <value>right-click on the button to close the program.</value>
  </data>
  <data name="LicenseChance3" xml:space="preserve">
    <value>middle-click on the Refuse button.</value>
  </data>
  <data name="LicenseChance4" xml:space="preserve">
    <value>right-click on the Deny button.</value>
  </data>
  <data name="LicenseChance5" xml:space="preserve">
    <value>middle-click on the Accept button.</value>
  </data>
  <data name="LicenseChance6" xml:space="preserve">
    <value>right-click on the Accept button.</value>
  </data>
  <data name="LicenseHeading" xml:space="preserve">
    <value>License agreement</value>
  </data>
  <data name="LicenseMessage" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="LicenseMessage1" xml:space="preserve">
    <value>You must read the license agreement first!</value>
  </data>
  <data name="LicenseMessage2" xml:space="preserve">
    <value>Not so fast! You should still read the license agreement.</value>
  </data>
  <data name="LicenseMessage3" xml:space="preserve">
    <value>I know that you want to run the program, but you still need to read the license agreement.</value>
  </data>
  <data name="LicenseMessage4" xml:space="preserve">
    <value>I get the point! You want to play the game "How many times click Accept" with me. Now your score:</value>
  </data>
  <data name="LicenseMessage5" xml:space="preserve">
    <value>Your score:</value>
  </data>
  <data name="LicenseRefuse" xml:space="preserve">
    <value>Refuse</value>
  </data>
  <data name="ParseXMLButton1" xml:space="preserve">
    <value>Discover</value>
  </data>
  <data name="ParseXMLButton2" xml:space="preserve">
    <value>Clear the list</value>
  </data>
  <data name="ParseXMLButton3" xml:space="preserve">
    <value>Save to file</value>
  </data>
  <data name="ParseXMLLabelComboBox1" xml:space="preserve">
    <value>ID VKontakte:</value>
  </data>
  <data name="ParseXMLLabelComboBox2" xml:space="preserve">
    <value>IP address:</value>
  </data>
  <data name="ParseXMLLabelComboBox3" xml:space="preserve">
    <value>Phone number:</value>
  </data>
  <data name="ParseXMLListSave" xml:space="preserve">
    <value>Saved!</value>
  </data>
  <data name="ParseXMLNoList" xml:space="preserve">
    <value>Fill out the list first</value>
  </data>
  <data name="ParseXMLNoParse" xml:space="preserve">
    <value>You cannot parse an empty field!</value>
  </data>
  <data name="RandomButtonCheckName" xml:space="preserve">
    <value>Withdraw</value>
  </data>
  <data name="RandomButtonCheckNameToolTip" xml:space="preserve">
    <value>Display data below</value>
  </data>
  <data name="RandomButtonFreeMode" xml:space="preserve">
    <value>Free mode</value>
  </data>
  <data name="RandomButtonFreeModeToolTip" xml:space="preserve">
    <value>Create your own roulette</value>
  </data>
  <data name="RandomButtonTwist" xml:space="preserve">
    <value>Twist</value>
  </data>
  <data name="RandomButtonTwistExpectation" xml:space="preserve">
    <value>Please, wait...</value>
  </data>
  <data name="RandomButtonTwistOut" xml:space="preserve">
    <value>Falls out: </value>
  </data>
  <data name="RandomButtonTwistToolTip" xml:space="preserve">
    <value>Try your luck</value>
  </data>
  <data name="RandomButtonZeroOut" xml:space="preserve">
    <value>Zero out</value>
  </data>
  <data name="RandomButtonZeroOutToolTip" xml:space="preserve">
    <value>Reset item lunge data</value>
  </data>
  <data name="RandomStringName1" xml:space="preserve">
    <value>We will twist for: You</value>
  </data>
  <data name="RandomStringName2" xml:space="preserve">
    <value>We will twist for: </value>
  </data>
  <data name="RandomStringOptions" xml:space="preserve">
    <value>Total drop options: </value>
  </data>
  <data name="RandomTextBoxNameToolTip" xml:space="preserve">
    <value>Enter first and last name here</value>
  </data>
  <data name="RandomTextBoxRdmGlobal" xml:space="preserve">
    <value>Click "Spin" to try your luck</value>
  </data>
  <data name="RouletteFX" xml:space="preserve">
    <value>Loose roulette</value>
  </data>
  <data name="RouletteFXAddToolTip" xml:space="preserve">
    <value>Add item to list</value>
  </data>
  <data name="RouletteFXButtonAdd" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="RouletteFXButtonEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="RouletteFXCheckBox1" xml:space="preserve">
    <value>Delete input field after adding item</value>
  </data>
  <data name="RouletteFXCheckBox2" xml:space="preserve">
    <value>Erase all items after importing the XML / TXT file</value>
  </data>
  <data name="RouletteFXCheckBox3" xml:space="preserve">
    <value>Exclude duplicates when selecting items from a list</value>
  </data>
  <data name="RouletteFXCopy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="RouletteFXDelete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="RouletteFXEdit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="RouletteFXErase" xml:space="preserve">
    <value>Erase everything</value>
  </data>
  <data name="RouletteFXEraseToolTip" xml:space="preserve">
    <value>Remove all items from the list.</value>
  </data>
  <data name="RouletteFXExport" xml:space="preserve">
    <value>Export</value>
  </data>
  <data name="RouletteFXExportToolTip" xml:space="preserve">
    <value>Save list of elements to XML/TXT file</value>
  </data>
  <data name="RouletteFXFileLoad" xml:space="preserve">
    <value>File uploaded successfully!</value>
  </data>
  <data name="RouletteFXFileSave" xml:space="preserve">
    <value>File saved successfully! Way: </value>
  </data>
  <data name="RouletteFXImport" xml:space="preserve">
    <value>Import</value>
  </data>
  <data name="RouletteFXImportToolTip" xml:space="preserve">
    <value>Load items from XML/TXT file to list</value>
  </data>
  <data name="RouletteFXItems" xml:space="preserve">
    <value>Items: </value>
  </data>
  <data name="RouletteFXListName" xml:space="preserve">
    <value>No name</value>
  </data>
  <data name="RouletteFXNormalMode" xml:space="preserve">
    <value>Normal mode</value>
  </data>
  <data name="RouletteFXNormalModeToolTip" xml:space="preserve">
    <value>Go to normal roulette mode</value>
  </data>
  <data name="RouletteFXNullItem" xml:space="preserve">
    <value>You cannot change the item to empty!</value>
  </data>
  <data name="RouletteFXNullItemAdd" xml:space="preserve">
    <value>You cannot add an empty element!</value>
  </data>
  <data name="RouletteFXNumber" xml:space="preserve">
    <value>Number of items to select:</value>
  </data>
  <data name="RouletteFXRenameCloseToolTip" xml:space="preserve">
    <value>Close change panel</value>
  </data>
  <data name="RouletteFXRenameToolTip" xml:space="preserve">
    <value>Edit item</value>
  </data>
  <data name="RouletteFXSelections" xml:space="preserve">
    <value>Selections in seconds:</value>
  </data>
  <data name="RouletteFXSettings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="RouletteFXSettingsCToolTip" xml:space="preserve">
    <value>Close settings panel</value>
  </data>
  <data name="RouletteFXSettingsToolTip" xml:space="preserve">
    <value>Open Settings Panel</value>
  </data>
  <data name="RouletteFXTextBoxNameToolTip" xml:space="preserve">
    <value>Enter the item name here</value>
  </data>
  <data name="RouletteFXTextBoxRToolTip" xml:space="preserve">
    <value>Enter here the name of the item you want to change</value>
  </data>
  <data name="RouletteFXTextChanToolTip" xml:space="preserve">
    <value>Enter your text here.</value>
  </data>
  <data name="RouletteFXTwist" xml:space="preserve">
    <value>Click Twist</value>
  </data>
  <data name="RouletteFXTwistToolTip" xml:space="preserve">
    <value>Select an item from the list.</value>
  </data>
  <data name="RouletteFXZeroOutToolTip" xml:space="preserve">
    <value>Reset dropout data from an item from the list</value>
  </data>
  <data name="StringException" xml:space="preserve">
    <value>Exception: </value>
  </data>
  <data name="ToolTipAbout" xml:space="preserve">
    <value>Program information</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome</value>
  </data>
  <data name="WindowClose" xml:space="preserve">
    <value>Close a window</value>
  </data>
  <data name="WindowMaximized" xml:space="preserve">
    <value>Maximize a window</value>
  </data>
  <data name="WindowRollup" xml:space="preserve">
    <value>Minimize a window</value>
  </data>
</root>